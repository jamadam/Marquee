=encoding utf8

=head1 NAME

Marquee::Cache - Cache

=head1 SYNOPSIS

    use Marquee::Cache;
    
    $cache = Marquee::Cache->new;
    $cache->max_keys(2);
    $cache->set(foo => 'bar');
    $cache->get('foo');
    $cache->set(baz => 'yada', sub {
        my $cached_time = shift;
        return $cached_time < (stat $file)[9];
    });

=head1 DESCRIPTION

有効期限管理付き簡易キャッシュマネージャー

=head1 ATTRIBUTES

L<Marquee::Cache>は下記の属性を実装します。

=head2 max_keys

インスタンス毎のキーの上限です。

=head1 CLASS METHODS

L<Marquee::Cache>は下記のクラスメソッドを実装します。

=head2 Class->new

=head1 INSTANCE METHODS

L<Marquee::Cache>は下記のインスタンスメソッドを実装します。

=head2 $instance->get($name)

指定の名前のキャッシュを返します。

=head2 $instance->set($name => $data)

指定の名前とデータでキャッシュを格納します。第3引数にて、期限切れ条件を1つ、または複数のコードリファレンスで指定できます。

    $cache->set(key, $data);
    $cache->set(key, $data, sub {...});
    $cache->set(key, $data, [sub {...}, sub {...}]);

各期限切れ条件は、キャッシュの生成時刻をエポック秒で受け取り、期限切れのとき真を返します。

    my $expire = sub {
        my $epoch = shift;
        
        # some tests here
        
        return 1; # or 0
    });

=head1 SEE ALSO

L<Marquee>, L<Mojolicious>

=cut
