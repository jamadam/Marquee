=head1 NAME

Marquee::Plugin::Router - ルーター [EXPERIMENTAL]

=head1 SYNOPSIS
    
    my $r = Marquee::Plugin::Router::Route->new;
    $r->route(qr{^/index\.html})->to(sub {
        ### DO SOMETHING
    });
    $r->route(qr{^/special\.html})->to(sub {
        ### DO SOMETHING
    });
    $r->route(qr{^/capture/(.+)-(.+)\.html})->to(sub {
        my ($a, $b) = @_;
        ### DO SOMETHING
    });
    $r->route(qr{^/rare/})->via('GET', 'POST')->to(sub {
        ### DO SOMETHING
    });
    $r->route(qr{^/default})->to(sub {
        ### DO SOMETHING
    });
    
    my $bridge = $r->bridge(sub {
        my $context = shift;
        return 1; # or 0
    });
    
    $bridge->route(qr{});

=head1 DESCRIPTION

=head1 METHODS

=head2 $instance->bridge(sub {...})

    my $bridge = $r->bridge(sub {
        my $context = shift;
        return $bool;
    });

=head2 $instance->route($regex)

リクエストURIにマッチングされる正規表現を指定します。

    $r->route(qr{^/index\.html});

=head2 $instance->to($code_ref)

ルートがマッチしたときに実行されるコールバックを指定します。

    $r->to(sub {...});

=head2 $instance->via(@http_methods)

HTTPメソッドでルートをフィルターします。

    $r->via('GET', 'POST');

=head2 $instance->add_cond(sub {})

ルートエントリーにマッチ条件を追加します。

    $r->add_cond(sub {
        my $context = shift;
        return 1; # or 0
    });

=head1 SEE ALSO

L<Marquee::Plugin::Router>, L<Marquee>, L<Mojolicious>

=cut
