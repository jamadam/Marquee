=encoding utf8

=head1 NAME

Marquee::Stash - stash

=head1 SYNOPSIS

    use Marquee::Stash;
    
    my $stash = Marquee::Stash->new(a => 'b', c => 'd');
    is_deeply $stash->set(), {a => 'b', c => 'd'};
    
    $stash->set(e => 'f');
    is_deeply $stash->get(), {a => 'b', c => 'd', e => 'f'};
    
    $stash->set(e => 'g');
    is_deeply $stash->get(), {a => 'b', c => 'd', e => 'g'};
    
    my $clone = $stash->clone(h => 'i');
    is_deeply $clone->get(), {a => 'b', c => 'd', e => 'g', h => 'i'};
    is_deeply $stash->get(), {a => 'b', c => 'd', e => 'g'};

=head1 DESCRIPTION

本クラスは、スタッシュを表象します。

=head1 CLASS METHODS

L<Marquee::Stash>は下記のクラスメソッドを実装します。

=head2 C<new>

    my $stash = Marquee::Stash->new(key => 'val', key2 => 'val2');

=head1 INSTANCE METHODS

L<Marquee::Stash>は下記のインスタンスメソッドを実装します。

=head2 C<get>

指定の名前のスタッシュ値を取得します。

    my $hash_ref = $stash->get();
    my $value    = $stash->get('key');
    
=head2 C<set>

指定のハッシュかハッシュリファレンスにてスタッシュ値を設定します。

    $stash->set(key => 'value');

=head2 C<clone>

指定のハッシュかハッシュリファレンスをマージしつつ、スタッシュのクローンを生成します。

    my $clone = $stash->clone;
    my $clone = $stash->clone(key => 'value');

=head1 SEE ALSO

L<Marquee>, L<Mojolicious>

=cut
